# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class UserInput(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, phone_number: str=None):  # noqa: E501
        """UserInput - a model defined in Swagger

        :param name: The name of this UserInput.  # noqa: E501
        :type name: str
        :param phone_number: The phone_number of this UserInput.  # noqa: E501
        :type phone_number: str
        """
        self.swagger_types = {
            'name': str,
            'phone_number': str
        }

        self.attribute_map = {
            'name': 'name',
            'phone_number': 'phoneNumber'
        }
        self._name = name
        self._phone_number = phone_number

    @classmethod
    def from_dict(cls, dikt) -> 'UserInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserInput of this UserInput.  # noqa: E501
        :rtype: UserInput
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this UserInput.

        Full name of the user  # noqa: E501

        :return: The name of this UserInput.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this UserInput.

        Full name of the user  # noqa: E501

        :param name: The name of this UserInput.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def phone_number(self) -> str:
        """Gets the phone_number of this UserInput.

        User's phoneNumber  # noqa: E501

        :return: The phone_number of this UserInput.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number: str):
        """Sets the phone_number of this UserInput.

        User's phoneNumber  # noqa: E501

        :param phone_number: The phone_number of this UserInput.
        :type phone_number: str
        """
        if phone_number is None:
            raise ValueError("Invalid value for `phone_number`, must not be `None`")  # noqa: E501

        self._phone_number = phone_number
